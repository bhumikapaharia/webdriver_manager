name: "Tests"
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          wget -qO- https://deb.opera.com/archive.key | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://deb.opera.com/opera-stable/ stable non-free"
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install opera-stable chromium-browser
          opera --version
      - name: Install Python dependencies
        run: |
          python -m pip install -U pip wheel
          pip install pipenv
          pipenv install --dev
      - name: Run tests with xvfb (Linux)
        if: runner.os == 'Linux'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: pipenv run py.test -sv --cov-config .coveragerc --cov-report xml --cov-report term:skip-covered --cov=webdriver_manager --tb=short tests/

      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          name: ${{ matrix.os }}-py${{ matrix.python-version }}
          
  
  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl wget git vim make && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              apt-get -y install software-properties-common && add-apt-repository ppa:deadsnakes/ppa && apt-get update && \
              python -m pip install --upgrade pip && \
              python --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              
              apt-get -y install chromium-chromedriver && \
              apt-get -y install firefox && \
              python -m pip install -U pip wheel && \
              pip install pipenv && \
              pipenv install --dev && \
                            
              pipenv run py.test -sv --cov-config .coveragerc --cov-report xml --cov-report term:skip-covered --cov=webdriver_manager --tb=short tests/ && \
              deactivate'
